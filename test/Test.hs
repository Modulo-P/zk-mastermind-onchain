{-# LANGUAGE NoImplicitPrelude #-}
{-# LANGUAGE OverloadedStrings #-}

module Main (main) where


import           GHC.Base                    (IO, undefined)

import           Groth16                     (Proof (..), VerificationKey (..))
import           Mastermind                  (zkValidator)
import           PlutusLedgerApi.V1          (Address (Address),
                                              Credential (PubKeyCredential, ScriptCredential),
                                              Datum (Datum), POSIXTime (..),
                                              Redeemer (Redeemer),
                                              ToData (toBuiltinData),
                                              TxOutRef (TxOutRef),
                                              UpperBound (UpperBound))
import           PlutusLedgerApi.V1.Value    (adaSymbol, adaToken, singleton,
                                              valueOf)
import           PlutusLedgerApi.V2          (Extended (Finite), Interval (..),
                                              LowerBound (LowerBound),
                                              OutputDatum (NoOutputDatum, OutputDatum),
                                              TxOut (TxOut, txOutAddress, txOutDatum, txOutReferenceScript, txOutValue),
                                              from, fromList)
import           PlutusLedgerApi.V2.Contexts (ScriptContext (..),
                                              ScriptPurpose (Spending),
                                              TxInInfo (TxInInfo, txInInfoOutRef, txInInfoResolved),
                                              TxInfo (..))
import           PlutusTx.AssocMap           (empty, fromList)
import           PlutusTx.Prelude
import           Prelude                     (putStrLn)
import           Test.Tasty                  (TestTree, defaultMain, testGroup)
import           Test.Tasty.HUnit            (assertBool, assertEqual, testCase)
import           Types                       (GameDatum (..),
                                              GameRedeemer (Clue))


main :: IO ()
main = defaultMain $ testGroup "Mastermind"
  [ testTransaction
  ]


ctx :: ScriptContext
ctx = ScriptContext {
  scriptContextTxInfo = txInfo,
  scriptContextPurpose = Spending scriptTxOutRef
}

txInfo :: TxInfo
txInfo = TxInfo {
  txInfoInputs = [txInCollateral, txInScript],
  txInfoReferenceInputs = [],
  txInfoOutputs = [txOutScript],
  txInfoFee = singleton adaSymbol adaToken 0,
  txInfoMint = singleton adaSymbol adaToken 0,
  txInfoDCert = [],
  txInfoWdrl = empty,
  txInfoValidRange = Interval {
    ivFrom = LowerBound (Finite (POSIXTime 1709537361000)) True,
    ivTo = UpperBound (Finite (POSIXTime 1709538261000)) False
  },
  txInfoSignatories = ["eba1cad63b5a96333157658b4e745848b3250702251bb5177a5279ca"],
  txInfoRedeemers = fromList [(Spending scriptTxOutRef,  Redeemer (toBuiltinData Clue))],
  txInfoData = empty,
  txInfoId = "1da7d6f9a8c926e599b524392dbabd5d3f4ff43f00583aa23e7797b94c9d9df7"
}

scriptTxOutRef :: TxOutRef
scriptTxOutRef = TxOutRef "f7325361e550dab67123fa69f26a08f4b487963a9461e05dc113e98eb87b952d" 0

txInCollateral :: TxInInfo
txInCollateral = TxInInfo {
  txInInfoOutRef = TxOutRef "1258bb23d007403b083f2195d866477c96f3ca4536f6187c73b84a717e28777b" 1,
  txInInfoResolved = TxOut {
    txOutAddress = Address (PubKeyCredential "eba1cad63b5a96333157658b4e745848b3250702251bb5177a5279ca") Nothing,
    txOutValue = singleton adaSymbol adaToken 5000000,
    txOutDatum = NoOutputDatum,
    txOutReferenceScript = Nothing
  }
}

txInScript :: TxInInfo
txInScript= TxInInfo {
  txInInfoOutRef = TxOutRef "f7325361e550dab67123fa69f26a08f4b487963a9461e05dc113e98eb87b952d" 0,
  txInInfoResolved = TxOut {
    txOutAddress = Address (ScriptCredential "25c56c8a89c53033f0d90760e82b5d08d5ee25e8de37ead949a3d22a") Nothing,
    txOutValue = singleton "d47ea75b975baa070978b1acd882029d2f95541d678d06bd63b4b9aa" "26825440" 30000000,
    txOutDatum = OutputDatum (Datum (toBuiltinData txInScriptDatum)),
    txOutReferenceScript = Nothing
  }
}

txInScriptDatum :: GameDatum
txInScriptDatum = GameDatum {
  codeMaster = "EBA1CAD63B5A96333157658B4E745848B3250702251BB5177A5279CA",
  codeBreaker = "91B35AAE6BEAE76E68311C5069F2D2F205684DF95C2D61AD62C87CF8",
  hashSol = 79000855481951651118131419564178034682476003589122661175328181354828842854,
  guesses = [0, 0, 0, 0],
  blackPegs = 0,
  whitePegs = 0,
  currentTurn = 1,
  expirationTime = 1709539341000,
  --
  vk = vkGame,
  proof = piIn
  }

vkGame :: VerificationKey
vkGame = VerificationKey
  { nPublic = 7
  , vkAlpha = [
      1087465700075239881150886970714190373727240240569586829641867407470138556527429257129540817699963097538427530710460,
      626606048073357715997861802712822650513279589575839660099985023837531578958040951299705493617087095722932650673554,
      1
    ]
  , vkBeta = [
      [
      2240744158322254238411118590587086240960098355056017611816523189683268652341905113719211049383754422310742316647544,
      3663330384170331218752844207770992366473122653140334959801028732394145395270654228166072073714643263234542645846479
      ],
      [
      1907313332124327230628653024277958382526650061922325071336952542712207970386777065576130714820220676573344073036978,
      1230115749697472625452733577870109012757780680310185019653632869433097650351553948317030425509594252615214976624549
      ],
      [
      1,
      0
      ]
    ]
  , vkGamma = [
      [
      352701069587466618187139116011060144890029952792775240219908644239793785735715026873347600343865175952761926303160,
      3059144344244213709971259814753781636986470325476647558659373206291635324768958432433509563104347017837885763365758
      ],
      [
      1985150602287291935568054521177171638300868978215655730859378665066344726373823718423869104263333984641494340347905,
      927553665492332455747201965776037880757740193453592970025027978793976877002675564980949289727957565575433344219582
      ],
      [
      1,
      0
      ]
    ]
  , vkDelta = [
      [
      814041891066797211905434513455068194971550767262962786134756991488619893784480606160132123689405312056554932176052,
      2588560840693036639321518023030562421259957884144736152551715854720970271129769118737114106074804423077470290464477
      ],
      [
      635237685723004473648791363777136044133258357972271868547563844165971207102200020822322442193124791715033478415414,
      37928614586932321901593452668134296029166152222807406707448383261955534841997144504217228480725213567961580673464
      ],
      [
      1,
      0
      ]
    ]
  , vkAlphaBeta = [
    [
    [
      2537157174758535239693887740369820268060806319913514466421451213792336528690711787806246616105877796005556197045237,
      883378670067415217798045985778103534888650261678820370794039697198204061032982518787590732837490792265896961210936
    ],
    [
      940833566247149475592932896090684843399451614601365116211428746346859022944441098839686347029312043134621249946820,
      752105595486331341406807746645401371655632697445633012750799115305427219875936412685034425161125505540557146841329
    ],
    [
      902294703114244060933220743503504820389129726504260173187711817029860908659919662455641437771424551793483524647972,
      250471782684582064614893516199777234846494055030401339738865210308536984559840241975157303374353240246073887943832
    ]
    ],
    [
    [
      1574575288642293366261504254453625953119720036728568897880245263509254818812371424838473250909880199535868328316185,
      1173301574920314051361980042948006405466067210894027378181282872111012956412191109529067748549913783368439395693674
    ],
    [
      2944216868096403493012574028955084022605365319967421529101315214044552284092817475153229507466504929697959359978453,
      3125513049273860695775929839977281060275575070445046576353167792735193670388367123732191353056001728886742365693518
    ],
    [
      1587577397770624194143398909090243026714839353667474438476576520625273192428442825134758160583667205565257436592077,
      1604652939710957270663679780930562112760366381499407288427693783493107987989044301388377966230353002914987867970499
    ]
    ]
  ]
  , vkIC = [
      [
      209727428953182018476174622628191252067558265970725116597982871445282573114975657453294209700025773017001422153921,
      2436474452304853090819383981311945071882562049249081350323471646040483876817310476635269484662945979600563300558314,
      1
      ],
      [
      1104551156214756570304916319094338134332567007340286554135735397556443403343488673519279458610224118055290061264933,
      3061519203542316411226327564323614726489805466349118007408975078607386354944975114844010809531055596568185570839221,
      1
      ],
      [
      3806193185693063791127710343768554611898420774379159557554942632551641662718556086813249655643014964814557681516102,
      2740344899333208181678885890029595357836669480837498507469589579222657764635148703246576767036800980970661763909148,
      1
      ],
      [
      1306749426486943667603989434033533292615829192974326014946094470224819876197886817667986750486148588033543939403077,
      3870738045102269248192192120674560597809220438979869202088437675495337681089292530775091114210952776170881829169958,
      1
      ],
      [
      2104511334736169886153423508464304263024831601193257852353827527894458730745041818182707003038155221644653820035743,
      3929420245659321104022502705690823656081323334037907745107132805266420429566839980102471780424367345094571366721410,
      1
      ],
      [
      1340359910492755899622807765865900586444835110460946350270704298049495205903310501898194622015863622444186919316548,
      359413276626804575515089538306786911298566261135169761566504273880197052167521149265344844034961870221300715759449,
      1
      ],
      [
      868703535340075014267873324612395367595999819696201962664966581789194177490582310951050085400649598123138972965549,
      61109296913777987465837536196410918001715134809729655383124746619280975186406081681535865477438547057403256071807,
      1
      ],
      [
      153032947497834747901311211609307171891598666617078159185297315975901814269212163268782924933572162656398142343625,
      3251718597888768517114475410884763505953527346676127292908891036414775986350677641076228866445137141803107963385879,
      1
      ],
      [
      1112727911518900910713708920428855482866538381067541788595515304634471096880198546436385644052818767154655030719191,
      1806128960233316578845151038080395802219719478200618885833674147527470165374342551659946667941747157920854173746332,
      1
      ]
    ]
  }

piIn :: Proof
piIn = Proof
  { piA = [
      465957314502056025731570912828786461635961800977693046838161736847997369271859989242257203870023237139442752945139,
      2526798747888247393462401004471969484112253406050164890009419115511760430538718391952354813312668738591521572880451,
      1
    ]
  , piB = [
      [
      3983537951169330269659179233909893523468412587219152945769156674881167251648181700841206477285543542459887511378841,
      3437008432150057170748657402076917041059890335163558049777844531563091196572305431690900901204573389841371271202494
      ],
      [
      2684747031956716655890083338621781651017158840842863755470950521738314938778991096748747484287044798405358707418309,
      2179280465360893047640945079998825067674509860166633967803074464520287514875266760591178290514131463191608577223500
      ],
      [
      1,
      0
      ]
    ]
  , piC = [
      1019421706758846161338085767135348932071953590163732266741815576548809383959750374217576749979435229198844347211269,
      1678035247841083316518904599701878009410776814187111591214304280615561765977862072368335667648858733924313216525832,
      1
    ]
  }

txOutScript :: TxOut
txOutScript = TxOut {
    txOutAddress = Address (ScriptCredential "25c56c8a89c53033f0d90760e82b5d08d5ee25e8de37ead949a3d22a") Nothing,
    txOutValue = singleton "d47ea75b975baa070978b1acd882029d2f95541d678d06bd63b4b9aa" "26825440" 30000000,
    txOutDatum = OutputDatum (Datum (toBuiltinData txOutScriptDatum)),
    txOutReferenceScript = Nothing
  }

txOutScriptDatum :: GameDatum
txOutScriptDatum = GameDatum {
  codeMaster = "EBA1CAD63B5A96333157658B4E745848B3250702251BB5177A5279CA",
  codeBreaker = "91B35AAE6BEAE76E68311C5069F2D2F205684DF95C2D61AD62C87CF8",
  hashSol = 79000855481951651118131419564178034682476003589122661175328181354828842854,
  guesses = [0, 0, 0, 0],
  blackPegs = 0,
  whitePegs = 0,
  currentTurn = 2,
  expirationTime = 1709540541000,
  --
  vk = vkGame,
  proof = piOut
  }

piOut :: Proof
piOut = Proof
  { piA = [
      1294781318636866522418849427593089372445971759400555013599159007645156960688077938439481291636013970874749125659445,
      2761407944945796132806978549347237269687339983432292002552480011072913155999780212113434312034147211040422076697877,
      1
    ]
  , piB = [
      [
      3096515459719604338873437951192019201225323152212137272137281109845980919894961642697348535368940221443116848196183,
      3912839585502008693733587955500966188610777554161970490787115784568135849108643758927395015318657188978603964146286
      ],
      [
      955417551817470783666891744998583247808559460276553295269346438983357737661100418306340482895584997505881596249936,
      114558810754840171888694031600338943180284949212131390506093460104683179308497900290125549214932197182377737201798
      ],
      [
      1,
      0
      ]
    ]
  , piC = [
      828609444845980837416731902954066797901726223789646316288926025161290227304909925855180769854952840517417579112780,
      1598298604598460870483329606478440638877630519074267123712687091235980584368208209602876206835330414975152370747691,
      1
    ]
  }


testTransaction :: TestTree
testTransaction = testCase "Test transaction validates" $
  do
    assertBool "Validator returns true" $ zkValidator txInScriptDatum Clue ctx
